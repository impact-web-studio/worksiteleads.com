---
interface Props {
	text: string;
	href: string;
	type?: 'button' | 'link';
	variation?: 'primary' | 'secondary';
	linkColor?: string;
	class?: string;
}

const {
	text = 'Click',
	href = '#',
	type = 'button',
	variation = 'primary',
	linkColor = 'text-gray-50',
	class: className,
} = Astro.props as Props;

const buttonClasses = {
	primary: 'bg-primary-500 hover:bg-primary-600 focus:ring-primary-500',
	secondary: 'bg-gray-50 hover:bg-gray-100 focus:ring-gray-50',
};

const colorClass = type === 'button' && buttonClasses[variation];
---

{
	type && type === 'button' ? (
		<a
			href={'/schedule-call'}
			class:list={[
				'inline-flex items-center px-4 py-2.5 rounded-sm md:rounded-md md:px-6 md:py-3',
				'text-black font-semibold wsl-text-lg',
				'transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-transparent',
				colorClass,
				className,
			]}
			set:html={text}
		/>
	) : (
		<a
			href={href}
			class:list={[
				'transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-transparent',
				linkColor,
				className,
			]}
			set:html={text}
		/>
	)
}

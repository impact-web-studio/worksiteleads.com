---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

import logoImage from '@/assets/worksiteleads-logo.png';

interface Props {
	size?: 'sm' | 'md' | 'lg' | 'xl';
	href?: string;
	alt?: string;
	className?: string;
	loading?: 'eager' | 'lazy';
	priority?: boolean;
	context?: 'header' | 'footer' | 'standalone';
}

const {
	size = 'md',
	href,
	alt,
	className = '',
	loading = 'eager',
	priority = false,
	context = 'standalone',
} = Astro.props;

const sizeConfig = {
	sm: {
		width: 120,
		height: 40,
		class: 'h-8 w-auto sm:h-10',
	},
	md: {
		width: 180,
		height: 60,
		class: 'h-10 w-auto sm:h-12',
	},
	lg: {
		width: 240,
		height: 80,
		class: 'h-12 w-auto sm:h-16',
	},
	xl: {
		width: 300,
		height: 100,
		class: 'h-16 w-auto sm:h-20',
	},
};

const config = sizeConfig[size];

// Generate appropriate alt text based on context
const generateAltText = () => {
	if (alt) return alt;

	// Replace 'YourCompany' with your actual company name
	const companyName = 'Worksite Leads';

	switch (context) {
		case 'header':
			return href ? `${companyName} home` : `${companyName} logo`;
		case 'footer':
			return href ? `${companyName} home` : `${companyName} logo`;
		default:
			return `${companyName} logo`;
	}
};
const isDecorative = context === 'footer' && !href;
const altText = isDecorative ? '' : generateAltText();

// Base classes for styling
const baseClasses = `
	inline-block
	transition-opacity
	duration-200
	${config.class}
	${className}
`;

// Focus and hover states for interactive logos
const interactiveClasses = href
	? `
	hover:opacity-80
	focus:outline-none
	focus:ring-2
	focus:ring-blue-500
	focus:ring-offset-2
	rounded-sm
	focus-visible:ring-2
	focus-visible:ring-blue-500
	focus-visible:ring-offset-2
`
	: '';

const finalClasses = `${baseClasses} ${interactiveClasses}`.trim();
---

{
	href ? (
		<a
			href={href}
			class={finalClasses}
			aria-label={context === 'header' ? 'Go to homepage' : undefined}
		>
			<Image
				src={logoImage}
				alt={altText}
				width={config.width}
				height={config.height}
				loading={loading}
				class="object-contain"
				format="webp"
				fallback={{
					format: 'png',
					quality: 90,
				}}
				densities={[1, 2]}
				{...(priority && { fetchpriority: 'high' })}
			/>
		</a>
	) : (
		<div class={baseClasses}>
			<Image
				src={logoImage}
				alt={altText}
				width={config.width}
				height={config.height}
				loading={loading}
				class="object-contain"
				format="webp"
				fallback={{
					format: 'png',
					quality: 90,
				}}
				densities={[1, 2]}
				{...(priority && { fetchpriority: 'high' })}
			/>
		</div>
	)
}

<style>
	/* Ensure minimum touch target size for interactive logos */
	a {
		min-height: 44px;
		min-width: 44px;
		display: inline-flex;
		align-items: center;
		justify-content: center;
	}

	/* High contrast mode support */
	@media (prefers-contrast: high) {
		a:focus {
			outline: 2px solid;
			outline-offset: 2px;
		}
	}

	/* Reduced motion support */
	@media (prefers-reduced-motion: reduce) {
		a {
			transition: none;
		}
	}
</style>
